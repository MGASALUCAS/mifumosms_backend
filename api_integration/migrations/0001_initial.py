# Generated by Django 5.2.7 on 2025-10-24 13:03

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_id', models.CharField(help_text='Public account identifier', max_length=32, unique=True)),
                ('name', models.CharField(help_text='Account name for identification', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Account description')),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=100, help_text='API calls per minute')),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=1000, help_text='API calls per hour')),
                ('rate_limit_per_day', models.PositiveIntegerField(default=10000, help_text='API calls per day')),
                ('total_api_calls', models.PositiveBigIntegerField(default=0)),
                ('last_api_call', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Account expiration date', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_accounts', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_accounts', to='tenants.tenant')),
            ],
            options={
                'db_table': 'api_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Integration name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Integration description')),
                ('platform', models.CharField(help_text="Platform (e.g., 'webhook', 'mobile', 'desktop')", max_length=50)),
                ('webhook_url', models.URLField(blank=True, help_text='Webhook URL for notifications')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('config', models.JSONField(default=dict, help_text='Integration-specific configuration')),
                ('total_requests', models.PositiveBigIntegerField(default=0)),
                ('successful_requests', models.PositiveBigIntegerField(default=0)),
                ('failed_requests', models.PositiveBigIntegerField(default=0)),
                ('last_request', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='api_integration.apiaccount')),
            ],
            options={
                'db_table': 'api_integrations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key_name', models.CharField(help_text='Name for this API key', max_length=100)),
                ('api_key', models.CharField(help_text='The actual API key', max_length=64, unique=True)),
                ('secret_key', models.CharField(help_text='Secret key for additional security', max_length=64)),
                ('status', models.CharField(choices=[('active', 'Active'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('permissions', models.JSONField(default=dict, help_text='JSON object defining what this key can access')),
                ('total_uses', models.PositiveBigIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('last_used_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Key expiration date', null=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('api_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='api_integration.apiaccount')),
            ],
            options={
                'db_table': 'api_keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIUsageLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.CharField(help_text='API endpoint called', max_length=200)),
                ('method', models.CharField(help_text='HTTP method', max_length=10)),
                ('status_code', models.PositiveIntegerField(help_text='HTTP status code')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_size', models.PositiveIntegerField(default=0, help_text='Request size in bytes')),
                ('response_size', models.PositiveIntegerField(default=0, help_text='Response size in bytes')),
                ('response_time_ms', models.PositiveIntegerField(help_text='Response time in milliseconds')),
                ('error_message', models.TextField(blank=True, help_text='Error message if any')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('api_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='api_integration.apiaccount')),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_logs', to='api_integration.apikey')),
                ('integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_logs', to='api_integration.apiintegration')),
            ],
            options={
                'db_table': 'api_usage_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['api_account', 'timestamp'], name='api_usage_l_api_acc_b2cbff_idx'), models.Index(fields=['endpoint', 'timestamp'], name='api_usage_l_endpoin_bc57dc_idx'), models.Index(fields=['status_code', 'timestamp'], name='api_usage_l_status__fd4290_idx')],
            },
        ),
    ]
