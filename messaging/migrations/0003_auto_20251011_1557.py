# Generated by Django 4.2.14 on 2025-10-11 12:57

from django.db import migrations
from django.contrib.auth import get_user_model

User = get_user_model()


def assign_contacts_to_default_user(apps, schema_editor):
    """Assign existing contacts to the first superuser or create a default user."""
    Contact = apps.get_model('messaging', 'Contact')

    # Try to get the first superuser
    try:
        default_user = User.objects.filter(is_superuser=True).first()
        if not default_user:
            # If no superuser exists, get the first user
            default_user = User.objects.first()

        if default_user:
            # Assign all contacts without created_by to the default user
            Contact.objects.filter(created_by__isnull=True).update(created_by=default_user)
            print(f"Assigned existing contacts to user: {default_user.email}")
        else:
            print("No users found. Contacts will remain unassigned.")
    except Exception as e:
        print(f"Error assigning contacts: {e}")


def reverse_assign_contacts(apps, schema_editor):
    """Reverse migration - set created_by to None."""
    Contact = apps.get_model('messaging', 'Contact')
    Contact.objects.all().update(created_by=None)


class Migration(migrations.Migration):
    dependencies = [
        ("messaging", "0002_contact_created_by"),
    ]

    operations = [
        migrations.RunPython(assign_contacts_to_default_user, reverse_assign_contacts),
    ]
