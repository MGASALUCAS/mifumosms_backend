# Generated by Django 5.2.7 on 2025-10-23 05:33

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=100, unique=True)),
                ('title_template', models.CharField(help_text='Title template with variables', max_length=200)),
                ('message_template', models.TextField(help_text='Message template with variables')),
                ('notification_type', models.CharField(choices=[('system', 'System Notification'), ('sms_credit', 'SMS Credit Notification'), ('campaign', 'Campaign Notification'), ('contact', 'Contact Notification'), ('billing', 'Billing Notification'), ('security', 'Security Notification'), ('maintenance', 'Maintenance Notification'), ('error', 'Error Notification'), ('success', 'Success Notification'), ('warning', 'Warning Notification'), ('info', 'Information Notification')], help_text='Type of notification this template generates', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent Priority')], default='medium', help_text='Default priority for notifications using this template', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether template is active')),
                ('variables', models.JSONField(blank=True, default=list, help_text='List of variables used in the template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True, help_text='Enable email notifications')),
                ('email_sms_credit', models.BooleanField(default=True, help_text='Email notifications for SMS credit')),
                ('email_campaigns', models.BooleanField(default=True, help_text='Email notifications for campaigns')),
                ('email_contacts', models.BooleanField(default=True, help_text='Email notifications for contacts')),
                ('email_billing', models.BooleanField(default=True, help_text='Email notifications for billing')),
                ('email_security', models.BooleanField(default=True, help_text='Email notifications for security')),
                ('sms_notifications', models.BooleanField(default=False, help_text='Enable SMS notifications')),
                ('sms_credit_warning', models.BooleanField(default=True, help_text='SMS notifications for low credit')),
                ('sms_critical', models.BooleanField(default=True, help_text='SMS notifications for critical issues')),
                ('in_app_notifications', models.BooleanField(default=True, help_text='Enable in-app notifications')),
                ('credit_warning_threshold', models.IntegerField(default=25, help_text='Percentage threshold for credit warning (1-100)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('credit_critical_threshold', models.IntegerField(default=10, help_text='Percentage threshold for critical credit warning (1-100)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Settings',
                'verbose_name_plural': 'Notification Settings',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Notification title', max_length=200)),
                ('message', models.TextField(help_text='Detailed notification message')),
                ('notification_type', models.CharField(choices=[('system', 'System Notification'), ('sms_credit', 'SMS Credit Notification'), ('campaign', 'Campaign Notification'), ('contact', 'Contact Notification'), ('billing', 'Billing Notification'), ('security', 'Security Notification'), ('maintenance', 'Maintenance Notification'), ('error', 'Error Notification'), ('success', 'Success Notification'), ('warning', 'Warning Notification'), ('info', 'Information Notification')], default='system', help_text='Type of notification', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent Priority')], default='medium', help_text='Notification priority level', max_length=10)),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read'), ('archived', 'Archived')], default='unread', help_text='Notification read status', max_length=10)),
                ('data', models.JSONField(blank=True, default=dict, help_text='Additional notification data')),
                ('action_url', models.URLField(blank=True, help_text='URL to navigate when notification is clicked', null=True)),
                ('action_text', models.CharField(blank=True, help_text='Text for action button', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When notification expires', null=True)),
                ('is_system', models.BooleanField(default=False, help_text='System-generated notification')),
                ('is_auto_generated', models.BooleanField(default=False, help_text='Auto-generated notification')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='notificatio_user_id_7088ed_idx'), models.Index(fields=['tenant', 'notification_type'], name='notificatio_tenant__127235_idx'), models.Index(fields=['created_at'], name='notificatio_created_46ad24_idx'), models.Index(fields=['expires_at'], name='notificatio_expires_4f3289_idx')],
            },
        ),
    ]
